{
    "fuzzing_params": {
        "Constraints": "2 <= n <= 10^5, 1 <= threshold <= n - 1, 1 <= edges.length <= min(105, n * (n - 1) / 2)., edges[i].length == 3, 0 <= Ai, Bi < n, Ai != Bi, 1 <= Wi <= 10^6. There may be multiple edges between a pair of nodes, but they must have unique weights.",
        "runs": 20
    },
    "problem_info": {
        "contest": "Weekly Contest 432",
        "problem_number": 3,
        "title": "3419. Minimize the Maximum Edge Weight of Graph",
        "difficulty": "Medium",
        "source_url": "https://leetcode.com/problems/minimize-the-maximum-edge-weight-of-graph/",
        "tags": [
            "Binary Search",
            "Depth-First Search",
            "Breath-First Search",
            "Graph",
            "Shortest Path"
        ],
        "test_examples": [
            "Example 1:  Input: n = 5, edges = [[1,0,1],[2,0,2],[3,0,1],[4,3,1],[2,1,1]], threshold = 2  Output: 1  Explanation:  Remove the edge 2 -> 0. The maximum weight among the remaining edges is 1.",
            "Example 2:  Input: n = 5, edges = [[0,1,1],[0,2,2],[0,3,1],[0,4,1],[1,2,1],[1,4,1]], threshold = 1  Output: -1  Explanation:  It is impossible to reach node 0 from node 2.",
            "Example 3:  Input: n = 5, edges = [[1,2,1],[1,3,3],[1,4,5],[2,3,2],[3,4,2],[4,0,1]], threshold = 1  Output: 2  Explanation:  Remove the edges 1 -> 3 and 1 -> 4. The maximum weight among the remaining edges is 2."
        ]
    }
}