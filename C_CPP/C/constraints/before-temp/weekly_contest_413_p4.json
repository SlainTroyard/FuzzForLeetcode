{
    "fuzzing_params": {
        "Constraints": "1 <= n == nums.length <= 2000, 0 <= nums[i] <= 2^31 - 1, 1 <= q == queries.length <= 10^5, queries[i].length == 2, queries[i] = [li, ri], 0 <= li <= ri <= n - 1",
        "runs": 15
    },
    "problem_info": {
        "contest": "Weekly Contest 413",
        "problem_number": 4,
        "title": "3277. Maximum XOR Score Subarray Queries",
        "difficulty": "Hard",
        "source_url": "https://leetcode.com/problems/maximum-xor-score-subarray-queries/",
        "tags": [
            "Array",
            "Dynamic Programming"
        ],
        "test_examples": [
            "Example 1: Input: nums = [2,8,4,32,16,1], queries = [[0,2],[1,4],[0,5]] Output: [12,60,60]",
            "Example 2: Input: nums = [0,7,3,2,8,5,1], queries = [[0,3],[1,5],[2,4],[2,6],[5,6]] Output: [7,14,11,14,5]"
        ]
    }
}