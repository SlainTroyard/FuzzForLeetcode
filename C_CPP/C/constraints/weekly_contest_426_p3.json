{
    "fuzzing_params": {
        "Constraints": "2 <= n, m <= 1000, edges1.length == n - 1, edges2.length == m - 1, edges1[i].length == edges2[i].length == 2, edges1[i] = [ai, bi], 0 <= ai, bi < n, edges2[i] = [ui, vi], 0 <= ui, vi < m, The input is generated such that edges1 and edges2 represent valid trees., 0 <= k <= 1000",
        "runs": 100
    },
    "problem_info": {
        "contest": "Weekly Contest 426",
        "problem_number": 3,
        "title": "3372. Maximize the Number of Target Nodes After Connecting Trees I",
        "difficulty": "Medium",
        "source_url": "https://leetcode.com/problems/maximize-the-number-of-target-nodes-after-connecting-trees-i/",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "test_examples": [
            "Example 1: Input: edges1 = [[0,1],[0,2],[2,3],[2,4]], edges2 = [[0,1],[0,2],[0,3],[2,7],[1,4],[4,5],[4,6]], k = 2 Output: [9,7,9,8,8] Explanation: For i = 0, connect node 0 from the first tree to node 0 from the second tree. For i = 1, connect node 1 from the first tree to node 0 from the second tree. For i = 2, connect node 2 from the first tree to node 4 from the second tree. For i = 3, connect node 3 from the first tree to node 4 from the second tree. For i = 4, connect node 4 from the first tree to node 4 from the second tree.",
            "Example 2: Input: edges1 = [[0,1],[0,2],[0,3],[0,4]], edges2 = [[0,1],[1,2],[2,3]], k = 1 Output: [6,3,3,3,3] Explanation: For every i, connect node i of the first tree with any node of the second tree."
        ]
    }
}