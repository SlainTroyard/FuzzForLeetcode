{
    "fuzzing_params": {
        "Constraints": "The number of nodes in the tree is in the range [1, 2000]. 1 <= Node.val <= 2000, 1 <= k <= 1024",
        "runs": 100
    },
    "problem_info": {
        "contest": "Weekly Contest 419",
        "problem_number": 2,
        "title": "3319. K-th Largest Perfect Subtree Size in Binary Tree",
        "difficulty": "Medium",
        "source_url": "https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree/",
        "tags": [
            "Tree",
            "Depth-first Search",
            "Sorting",
            "Binary Tree"
        ],
        "test_examples": "Example 1:\nInput: root = [5,3,6,5,2,5,7,1,8,null,null,6,8], k = 2\nOutput: 3\nExplanation:\nThe roots of the perfect binary subtrees are highlighted in black. Their sizes, in non-increasing order are [3, 3, 1, 1, 1, 1, 1, 1].\nThe 2nd largest size is 3.\nExample 2:\nInput: root = [1,2,3,4,5,6,7], k = 1\nOutput: 7\nExplanation:\nThe sizes of the perfect binary subtrees in non-increasing order are [7, 3, 3, 1, 1, 1, 1]. The size of the largest perfect binary subtree is 7."
    }
}