{
    "fuzzing_params": {
        "Constraints": "2 <= n == moveTime.length <= 750, 2 <= m == moveTime[i].length <= 750, 0 <= moveTime[i][j] <= 10^9",
        "runs": 10
    },
    "problem_info": {
        "contest": "Weekly Contest 422",
        "problem_number": 3,
        "title": "3342. Find Minimum Time to Reach Last Room II",
        "difficulty": "Medium",
        "source_url": "https://leetcode.com/problems/find-minimum-time-to-reach-last-room-ii/",
        "tags": [
            "Array",
            "Graph",
            "Heap (Priority Queue)",
            "Matrix",
            "Shortest Path"
        ],
        "test_examples": [
            "Example 1: Input: moveTime = [[0,4],[4,4]] Output: 7 Explanation: The minimum time required is 7 seconds. At time t == 4, move from room (0, 0) to room (1, 0) in one second. At time t == 5, move from room (1, 0) to room (1, 1) in two seconds.",
            "Example 2: Input: moveTime = [[0,0,0,0],[0,0,0,0]] Output: 6 Explanation: The minimum time required is 6 seconds. At time t == 0, move from room (0, 0) to room (1, 0) in one second. At time t == 1, move from room (1, 0) to room (1, 1) in two seconds. At time t == 3, move from room (1, 1) to room (1, 2) in one second. At time t == 4, move from room (1, 2) to room (1, 3) in two seconds.",
            "Example 3: Input: moveTime = [[0,1],[1,2]] Output: 4"
        ]
    }
}