{
    "fuzzing_params": {
        "Constraints": "7 <= nums.length <= 1000, 1 <= nums[i] <= 1000",
        "runs": 100
    },
    "problem_info": {
        "contest": "Weekly Contest 430",
        "problem_number": 3,
        "title": "3404. Count Special Subsequences",
        "difficulty": "Medium",
        "source_url": "https://leetcode.cn/problems/count-special-subsequences/",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Enumeration"
        ],
        "test_examples": [
            "Example 1: Input: nums = [1,2,3,4,3,6,1] Output: 1 Explanation: There is one special subsequence in nums.(p, q, r, s) = (0, 2, 4, 6):This corresponds to elements (1, 3, 3, 1).nums[p] * nums[r] = nums[0] * nums[4] = 1 * 3 = 3nums[q] * nums[s] = nums[2] * nums[6] = 3 * 1 = 3",
            "Example 2: Input: nums = [3,4,3,4,3,4,3,4] Output: 3 Explanation: There are three special subsequences in nums.(p, q, r, s) = (0, 2, 4, 6):This corresponds to elements (3, 3, 3, 3).nums[p] * nums[r] = nums[0] * nums[4] = 3 * 3 = 9nums[q] * nums[s] = nums[2] * nums[6] = 3 * 3 = 9(p, q, r, s) = (1, 3, 5, 7):This corresponds to elements (4, 4, 4, 4).nums[p] * nums[r] = nums[1] * nums[5] = 4 * 4 = 16nums[q] * nums[s] = nums[3] * nums[7] = 4 * 4 = 16(p, q, r, s) = (0, 2, 5, 7):This corresponds to elements (3, 3, 4, 4).nums[p] * nums[r] = nums[0] * nums[5] = 3 * 4 = 12nums[q] * nums[s] = nums[2] * nums[7] = 3 * 4 = 12"
        ]
    }
}