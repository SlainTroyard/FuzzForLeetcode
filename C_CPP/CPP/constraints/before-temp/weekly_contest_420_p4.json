{
    "fuzzing_params": {
        "Constraints": "n == parent.length == s.length, 1 <= n <= 105, 0 <= parent[i] <= n - 1 for all i >= 1., parent[0] == -1, parent represents a valid tree., s consists only of lowercase English letters.",
        "runs": 20
    },
    "problem_info": {
        "contest": "Weekly Contest 420",
        "problem_number": 4,
        "title": "3327. Check if DFS Strings Are Palindromes",
        "difficulty": "Hard",
        "source_url": "https://leetcode.com/problems/check-if-dfs-strings-are-palindromes/",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Tree",
            "Depth-First Search",
            "Hash Function"
        ],
        "test_examples": "Example 1:\nInput: parent = [-1,0,0,1,1,2], s = \"aababa\"\nOutput: [true,true,false,true,true,true]\nExplanation:\nCalling dfs(0) results in the string dfsStr = \"abaaba\", which is a palindrome.\nCalling dfs(1) results in the string dfsStr = \"aba\", which is a palindrome.\nCalling dfs(2) results in the string dfsStr = \"ab\", which is not a palindrome.\nCalling dfs(3) results in the string dfsStr = \"a\", which is a palindrome.\nCalling dfs(4) results in the string dfsStr = \"b\", which is a palindrome.\nCalling dfs(5) results in the string dfsStr = \"a\", which is a palindrome.\nExample 2:\nInput: parent = [-1,0,0,0,0], s = \"aabcb\"\nOutput: [true,true,true,true,true]\nExplanation:\nEvery call on dfs(x) results in a palindrome string."
    }
}