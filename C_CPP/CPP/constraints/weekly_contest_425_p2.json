{
    "fuzzing_params": {
        "Constraints": "1 <= s.length == t.length <= 2 * 10^5, 1 <= k <= s.length, s.length is divisible by k., s and t consist only of lowercase English letters., The input is generated such that s and t are anagrams of each other.",
        "runs": 100
    },
    "problem_info": {
        "contest": "Weekly Contest 425",
        "problem_number": 2,
        "title": "3365. Rearrange K Substrings to Form Target String",
        "difficulty": "Medium",
        "source_url": "https://leetcode.com/problems/rearrange-k-substrings-to-form-target-string/",
        "tags": [
            "Hash Table",
            "String",
            "Sorting"
        ],
        "test_examples": [
            "Example 1: Input: s = \"abcd\", t = \"cdab\", k = 2 Output: true Explanation: Split s into 2 substrings of length 2: [\"ab\", \"cd\"]. Rearranging these substrings as [\"cd\", \"ab\"], and then concatenating them results in \"cdab\", which matches t.",
            "Example 2: Input: s = \"aabbcc\", t = \"bbaacc\", k = 3 Output: true Explanation: Split s into 3 substrings of length 2: [\"aa\", \"bb\", \"cc\"]. Rearranging these substrings as [\"bb\", \"aa\", \"cc\"], and then concatenating them results in \"bbaacc\", which matches t.",
            "Example 3: Input: s = \"aabbcc\", t = \"bbaacc\", k = 2 Output: false Explanation: Split s into 2 substrings of length 3: [\"aab\", \"bcc\"]. These substrings cannot be rearranged to form t = \"bbaacc\", so the output is false."
        ]
    }
}