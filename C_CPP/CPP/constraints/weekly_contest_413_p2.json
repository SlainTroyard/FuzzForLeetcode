{
    "fuzzing_params": {
        "Constraints": "1 <= queries.length <= 2 * 10^5, All queries[i] are unique., -10^9 <= queries[i][0], queries[i][1] <= 10^9, 1 <= k <= 10^5",
        "runs": 20
    },
    "problem_info": {
        "contest": "Weekly Contest 413",
        "problem_number": 2,
        "title": "3275. K-th Nearest Obstacle Queries",
        "difficulty": "Medium",
        "source_url": "https://leetcode.com/problems/k-th-nearest-obstacle-queries/",
        "tags": [
            "Array",
            "Heap (Priority Queue)"
        ],
        "test_examples": "Example 1:\nInput: queries = [[1,2],[3,4],[2,3],[-3,0]], k = 2\nOutput: [-1,7,5,3]\nExplanation:\nInitially, there are 0 obstacles.\nAfter queries[0], there are less than 2 obstacles.\nAfter queries[1], there are obstacles at distances 3 and 7.\nAfter queries[2], there are obstacles at distances 3, 5, and 7.\nAfter queries[3], there are obstacles at distances 3, 3, 5, and 7.\nExample 2:\nInput: queries = [[5,5],[4,4],[3,3]], k = 1\nOutput: [10,8,6]\nExplanation:\nAfter queries[0], there is an obstacle at distance 10.\nAfter queries[1], there are obstacles at distances 8 and 10.\nAfter queries[2], there are obstacles at distances 6, 8, and 10."
    }
}