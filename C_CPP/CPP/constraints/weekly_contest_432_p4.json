{
    "fuzzing_params": {
        "Constraints": "1 <= nums.length <= 10^5, 1 <= nums[i] <= 10^9, 1 <= k <= 10^9",
        "runs": 20
    },
    "problem_info": {
        "contest": "Weekly Contest 432",
        "problem_number": 4,
        "title": "3420. Count Non-Decreasing Subarrays After K Operations",
        "difficulty": "Hard",
        "source_url": "https://leetcode.com/problems/count-non-decreasing-subarrays-after-k-operations/",
        "tags": [
            "Array",
            "Stack",
            "Segment Tree",
            "Queue",
            "Sliding Window",
            "Monotonic Stack",
            "Monotonic Queue"
        ],
        "test_examples": [
            "Example 1:  Input: nums = [6,3,1,2,4,4], k = 7  Output: 17  Explanation:  Out of all 21 possible subarrays of nums, only the subarrays [6, 3, 1], [6, 3, 1, 2], [6, 3, 1, 2, 4] and [6, 3, 1, 2, 4, 4] cannot be made non-decreasing after applying up to k = 7 operations. Thus, the number of non-decreasing subarrays is 21 - 4 = 17.",
            "Example 2:  Input: nums = [6,3,1,3,6], k = 4  Output: 12  Explanation:  The subarray [3, 1, 3, 6] along with all subarrays of nums with three or fewer elements, except [6, 3, 1], can be made non-decreasing after k operations. There are 5 subarrays of a single element, 4 subarrays of two elements, and 2 subarrays of three elements except [6, 3, 1], so there are 1 + 5 + 4 + 2 = 12 subarrays that can be made non-decreasing."
        ]
    }
}